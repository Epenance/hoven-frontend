---
import { getImage } from "astro:assets";
import { StrapiBlocks } from '@sensinum/astro-strapi-blocks';
import { getBackgroundClasses } from '../../lib/background';
import type { SpotProps } from './types';

interface Props extends SpotProps {
    Text?: any;
    Background?: {
        url: string;
        alternativeText?: string;
    };
}

const { Text, Background, Configuration } = Astro.props;

const CMS_PATH = import.meta.env.PUBLIC_CMS_PATH

const astroImage = Background ? await getImage({
    src: CMS_PATH + Background.url,
    width: 1920,
    height: 1080,
    format: 'webp',
    quality: 80,
    alt: Background.alternativeText ? Background.alternativeText : "",
}): undefined;

const backgroundClasses = getBackgroundClasses(Configuration?.Background);
---

<div class={`${backgroundClasses} relative bg-cover bg-no-repeat`} style={astroImage ? `background-image: url('${astroImage.src}');` : ''}>
    <div class="container mx-auto p-5 md:p-0 z-20 relative">
        <div class="w-full px-12 flex rounded-xl p-10 min-h-160 bg-center bg-cover bg-no-repeat">
            <div class="flex justify-center flex-col md:w-2/4">
                <div class="text-white text-lg mt-4">
                    {<StrapiBlocks data={Text} theme={{
                        extend: {
                            heading: {
                                h1: ["uppercase text-white font-bold md:text-7xl text-4xl"]
                            },
                            paragraph: {
                                link: ['rounded-sm uppercase font-bold bg-jagt hover:bg-jagt-500 py-4 px-8 text-white inline-block']
                            }
                        }
                    }} />}
                </div>
            </div>
        </div>
    </div>
    <div class="absolute top-0 left-0 right-0 bottom-0 z-0" style="background: linear-gradient(to right bottom, rgba(59, 90, 52, 0.8), rgba(42, 64, 42, 0.7));"></div>
</div>
